(in-package #:noloop.cacau)

(defun create-new-tdd-interface (runner)
  (let ((common (make-common-interface runner)))
    ;; (defun before-all (&rest args)
    ;;   (common-create-before-all common args))
    ;; (defun after-all (&rest args)
    ;;   (common-create-after-all common args))
    ;; (defun before-each (&rest args)
    ;;   (common-create-before-each common args))
    ;; (defun after-each (&rest args)
    ;;   (common-create-after-each common args))
    (defun suite (name fn)
      (common-create-suite common name fn))
    ;; (defun only-suite (name fn)
    ;;   (common-create-suite common name fn :only-p t))
    ;; (defun skip-suite (name fn)
    ;;   (common-create-suite common name fn :skip-p t))
    (defun test (name fn)
      (common-create-test common name fn))
    ;; (defun only-test (name fn)
    ;;   (common-create-test common name fn :only-p t))
    ;; (defun skip-test (name fn)
    ;;   (common-create-test common name fn :skip-p t))
    ))

